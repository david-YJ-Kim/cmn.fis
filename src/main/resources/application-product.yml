property:
  type: dev

server:
  port: 9010
  shutdown: graceful


logging:
  level:
    org:
      springframework:
        jdbc:
          core:
            JdbcTemplate : debug
    #    '[org.springframework]': debug
    #    '[org.springframework.web]': debug


spring:
  datasource:
    #oracle
    driver-class-name: oracle.jdbc.OracleDriver
    url: jdbc:oracle:thin:@(DESCRIPTION=(LOAD_BALANCE=OFF)(FAILOVER=ON)(ADDRESS=(PROTOCOL=TCP)(HOST=10.184.50.188)(PORT=1521)(ADDRESS=(PROTOCOL=TCP)(HOST=10.184.50.189)(PORT=1521)))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=svmpdb.absolics.net)))
    username: mesadm
    password: absolics12#

  jpa:
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
          batch_size: 1000
    show-sql: true
    database-platform: org.hibernate.dialect.OracleDialect
  transaction:
    mode: jdbc


#Solace 접속 정보


#SFTP (NAS 접속 정보)
nas:
  sftp:
    host: 192.168.0.193
    port: 22
    user-name: mestest
    user-passwd: absadmin
    remote-target-dir:  ./backup/

##### Application Config ####
ap:
  info:
    group: FIS
    site: SVM
    env: PROD
    sequence: 1
  worker:
    pool-size:
      core: 5
      max: 50
    capacity: 1000
    name:
      prefix: FIS-ASYNC-
  seq:
    rule:
      path: /home/abscapp/data/app/utils/
      name: SequenceRule.json
  file:
    type:
      default: csv
    mode: local
    nas:
      path:
        base: /SVM/INSPECTION/
      sftp:
        host: 192.168.0.193
        port: 22
        user-name: mestest
        user-passwd: absadmin
        remote-target-dir: ./backup/
    local-path: D:\\parsingfile.csv
  interface:
    solace:
      host: "10.184.50.81:55555,10.184.50.82:55555"
      vpn: MES
      client:
        username: default
        password: admin
      connect:
        trial-count: 2
      reconnect:
        trial-count: 20
        per-host: 5
    destination:
      send:
        topic: SVM/PROD/EDC/CMN/00
      receive:
        queue: SVM_PROD_FIS_CMN_00
        topic: SVM/PROD/FIS/CMN/00
        init: SVM/PROD/FIS/CMN/INIT
  query:
    batchSize: 1000
    table-name:
      insp: CN_FIS_INSP_DATA
      meas: CN_FIS_MEAS_DATA
    insert-template: INSERT INTO TABLE_NAME ( OBJ_ID,FILE_POSN_VAL,FILE_NM,WORK_ID,ROW_SEQ,CRT_DT,COLUM) VALUES ( ?,?,?,?,?,SYSTIMESTAMP,INPUT )
    del-template: DELETE FROM TABLE_NAME WHERE WORK_ID = ?
    getDelList: SELECT * FROM CN_FIS_WORK cfw WHERE PROC_STATE ='C'OR PROC_STATE ='D'
    deleteCnWork: DELETE FROM CN_FIS_WORK WHERE OBJ_ID = ?
    insertWorkHistory: INSERT INTO CH_FIS_WORK (OBJ_ID,REF_OBJ_ID,FILE_NM,FILE_PATH,FILE_TYPE,EQP_ID,REQ_SYS_NM,PROC_STATE,CREATE_USER_ID,CREATE_DATE,UPDATE_USER_ID,UPDATE_DATE) VALUES (?,?,?,?,?,?,?,?,?,SYSTIMESTAMP,?,SYSTIMESTAMP)
    rule:
      parsing: SELECT OBJ_ID,EQP_NM,FILE_FM_TYP,FILE_TYP,FILE_TRGT_POSN_VAL,PARS_CLM_ID_VAL,PARS_ROW_VAL FROM CN_FIS_IF_PARSE_RULE
      mapping: SELECT OBJ_ID,REF_OBJ_ID,FILE_CLM_VAL,FILE_CLM_NM,MPNG_CLM_NM,CLM_DATA_TYP FROM CN_FIS_IF_PARSE_RULE_REL
  shutdown:
    force:
      timeout:
        ms: 10000
    polling:
      interval:
        ms: 10
